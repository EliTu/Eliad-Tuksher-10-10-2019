{"version":3,"sources":["components/containers/Favorites/FavoritesList/FavoritesList.module.css","components/containers/Favorites/Favorites.module.css","components/containers/Favorites/FavoritesList/FavoritesList.tsx","components/containers/Favorites/Favorites.tsx"],"names":["module","exports","withRouter","connect","state","favorites","favoritesList","favoritesWeatherData","weatherData","dispatch","getFavoritesWeatherData","key","cityName","countryName","fireCurrentWeatherHttpRequest","getClickedItemWeatherCurrentData","getClickedItemFiveDaysForecast","fireFiveDaysForecastHttpRequest","memo","history","FavoritesListStyles","styles","CardWrapper","useEffect","map","className","WeatherText","Metric","Temperature","onClick","push","handleFavoriteCardClick","Card","mainHeading","description","temperatures","Value","Favorites","isLoading","error","FavoritesStyles","noFavoritesMessage","length","ErrorMessage","errorDetails","role","currentWeather"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,oBAAsB,2CAA2C,YAAc,qC,oBCAjGD,EAAOC,QAAU,CAAC,gBAAkB,mCAAmC,mBAAqB,wC,6GCmH7EC,cACdC,aAzCuB,SAACC,GACxB,MAAO,CACNC,UAAWD,EAAMC,UAAUC,cAC3BC,qBAAsBH,EAAMC,UAAUG,gBAIb,SAACC,GAC3B,MAAO,CACNC,wBAAyB,SACxBC,EACAC,EACAC,GAHwB,OAKxBJ,EACCK,YACCH,EACA,mBACAC,EACAC,KAGHE,iCAAkC,SACjCJ,EACAC,EACAC,GAHiC,OAKjCJ,EACCK,YACCH,EACA,iBACAC,EACAC,KAGHG,+BAAgC,SAACL,GAAD,OAC/BF,EAASQ,YAAgCN,QAK3CR,CAGEe,gBA/G4C,SAAC,GAOzC,IANNb,EAMK,EANLA,UACAE,EAKK,EALLA,qBACAG,EAIK,EAJLA,wBACAS,EAGK,EAHLA,QACAJ,EAEK,EAFLA,iCACAC,EACK,EADLA,+BAEQI,EAAqCC,IAArCD,oBAAqBE,EAAgBD,IAAhBC,YAE7BC,qBAAU,WACTlB,EAAUmB,KAAI,gBAAGb,EAAH,EAAGA,IAAKC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,YAAlB,OACbH,EACCC,EACAC,EACAC,EACA,yBAGA,CAACR,EAAWK,IAiBf,OACC,yBAAKe,UAAWL,GACdb,EAAqBiB,KACrB,YAA+D,IAA5DZ,EAA2D,EAA3DA,SAAUC,EAAiD,EAAjDA,YAAaF,EAAoC,EAApCA,IAAKe,EAA+B,EAA/BA,YACtBC,EADqD,EAAlBC,YACnCD,OAER,OACC,yBACCF,UAAWH,EACXX,IAAKA,EACLkB,QAAS,kBAzBiB,SAC/BlB,EACAC,EACAC,GAEAE,EACCJ,EACAC,EACAC,EACA,kBAEDG,EAA+BL,GAC/BQ,EAAQW,KAAK,KAcPC,CACCpB,EACAC,EACAC,KAIF,kBAACmB,EAAA,EAAD,CACCC,YAAW,UAAKrB,EAAL,aAAkBC,GAC7BqB,YAAaR,EACbS,aAAY,UAAKR,EAAOS,mB,0BClEhC,0CAaO,IAAMC,EAA8B,SAAC,GAKrC,IAJNC,EAIK,EAJLA,UACAC,EAGK,EAHLA,MACAlC,EAEK,EAFLA,UACAG,EACK,EADLA,YAEQgC,EAAwCnB,IAAxCmB,gBAAiBC,EAAuBpB,IAAvBoB,mBACzB,OACC,6BAAShB,UAAWe,GACjBF,GACmB,IAArBjC,EAAUqC,QACa,IAAvBlC,EAAYkC,OAQRH,EACH,kBAACI,EAAA,EAAD,CAAcC,aAAcL,KAE3BD,GAAa,kBAAC,EAAD,MAVd,uBAAGb,UAAWgB,GAAd,0HAIC,0BAAMI,KAAK,OAAX,YAJD,2CAyBW1C,uBATS,SAACC,GACxB,MAAO,CACNkC,UAAWlC,EAAMC,UAAUiC,UAC3BC,MAAOnC,EAAM0C,eAAeP,MAC5BlC,UAAWD,EAAMC,UAAUC,cAC3BE,YAAaJ,EAAMC,UAAUG,eAIhBL,CAAyBkC","file":"static/js/3.92ec803f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FavoritesListStyles\":\"FavoritesList_FavoritesListStyles__2G12V\",\"CardWrapper\":\"FavoritesList_CardWrapper__2fI0M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FavoritesStyles\":\"Favorites_FavoritesStyles__txJOr\",\"noFavoritesMessage\":\"Favorites_noFavoritesMessage__3Vs-b\"};","import React, { useEffect, memo } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Card from '../../../display/UI/Card/Card';\nimport { fireCurrentWeatherHttpRequest } from '../../WeatherDisplayContainer/store/actions';\nimport { fireFiveDaysForecastHttpRequest } from '../../WeatherDisplayContainer/store/actions';\nimport styles from './FavoritesList.module.css';\nimport { IProps } from './propsInterface';\n\nexport const FavoritesList: React.FC<IProps> = ({\n\tfavorites,\n\tfavoritesWeatherData,\n\tgetFavoritesWeatherData,\n\thistory,\n\tgetClickedItemWeatherCurrentData,\n\tgetClickedItemFiveDaysForecast,\n}) => {\n\tconst { FavoritesListStyles, CardWrapper } = styles;\n\n\tuseEffect(() => {\n\t\tfavorites.map(({ key, cityName, countryName }) =>\n\t\t\tgetFavoritesWeatherData(\n\t\t\t\tkey,\n\t\t\t\tcityName,\n\t\t\t\tcountryName,\n\t\t\t\t'favortiesWeather'\n\t\t\t)\n\t\t);\n\t}, [favorites, getFavoritesWeatherData]);\n\n\tconst handleFavoriteCardClick = (\n\t\tkey: string,\n\t\tcityName: string,\n\t\tcountryName: string\n\t) => {\n\t\tgetClickedItemWeatherCurrentData(\n\t\t\tkey,\n\t\t\tcityName,\n\t\t\tcountryName,\n\t\t\t'currentWeather'\n\t\t);\n\t\tgetClickedItemFiveDaysForecast(key);\n\t\thistory.push('/');\n\t};\n\n\treturn (\n\t\t<div className={FavoritesListStyles}>\n\t\t\t{favoritesWeatherData.map(\n\t\t\t\t({ cityName, countryName, key, WeatherText, Temperature }) => {\n\t\t\t\t\tconst { Metric } = Temperature;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={CardWrapper}\n\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\thandleFavoriteCardClick(\n\t\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t\tcityName,\n\t\t\t\t\t\t\t\t\tcountryName\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\tmainHeading={`${cityName}, ${countryName}`}\n\t\t\t\t\t\t\t\tdescription={WeatherText}\n\t\t\t\t\t\t\t\ttemperatures={`${Metric.Value}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t)}\n\t\t</div>\n\t);\n};\n// Redux setup:\nconst mapStateToProps = (state: any) => {\n\treturn {\n\t\tfavorites: state.favorites.favoritesList,\n\t\tfavoritesWeatherData: state.favorites.weatherData,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tgetFavoritesWeatherData: (\n\t\t\tkey: string,\n\t\t\tcityName: string,\n\t\t\tcountryName: string\n\t\t) =>\n\t\t\tdispatch(\n\t\t\t\tfireCurrentWeatherHttpRequest(\n\t\t\t\t\tkey,\n\t\t\t\t\t'favoritesWeather',\n\t\t\t\t\tcityName,\n\t\t\t\t\tcountryName\n\t\t\t\t)\n\t\t\t),\n\t\tgetClickedItemWeatherCurrentData: (\n\t\t\tkey: string,\n\t\t\tcityName: string,\n\t\t\tcountryName: string\n\t\t) =>\n\t\t\tdispatch(\n\t\t\t\tfireCurrentWeatherHttpRequest(\n\t\t\t\t\tkey,\n\t\t\t\t\t'currentWeather',\n\t\t\t\t\tcityName,\n\t\t\t\t\tcountryName\n\t\t\t\t)\n\t\t\t),\n\t\tgetClickedItemFiveDaysForecast: (key: string) =>\n\t\t\tdispatch(fireFiveDaysForecastHttpRequest(key)),\n\t};\n};\n\nexport default withRouter(\n\tconnect(\n\t\tmapStateToProps,\n\t\tmapDispatchToProps\n\t)(memo(FavoritesList))\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport FavoritesList from './FavoritesList/FavoritesList';\nimport ErrorMessage from '../../display/UI/ErrorMessage/ErrorMessage';\nimport styles from './Favorites.module.css';\n\ninterface IProps {\n\tisLoading: boolean;\n\terror: string;\n\tfavorites: {}[];\n\tweatherData: {}[];\n}\n\nexport const Favorites: React.FC<IProps> = ({\n\tisLoading,\n\terror,\n\tfavorites,\n\tweatherData,\n}) => {\n\tconst { FavoritesStyles, noFavoritesMessage } = styles;\n\treturn (\n\t\t<section className={FavoritesStyles}>\n\t\t\t{!isLoading &&\n\t\t\tfavorites.length === 0 &&\n\t\t\tweatherData.length === 0 ? (\n\t\t\t\t<p className={noFavoritesMessage}>\n\t\t\t\t\tThere seems to be no favorite items available to display!\n\t\t\t\t\tPlease search for your favorite destinations and press on\n\t\t\t\t\tthe\n\t\t\t\t\t<span role=\"img\"> ‚ù§ </span>\n\t\t\t\t\tbutton to add to your favorites list.\n\t\t\t\t</p>\n\t\t\t) : error ? (\n\t\t\t\t<ErrorMessage errorDetails={error} />\n\t\t\t) : (\n\t\t\t\t!isLoading && <FavoritesList />\n\t\t\t)}\n\t\t</section>\n\t);\n};\n// Redux setup:\nconst mapStateToProps = (state: any) => {\n\treturn {\n\t\tisLoading: state.favorites.isLoading,\n\t\terror: state.currentWeather.error,\n\t\tfavorites: state.favorites.favoritesList,\n\t\tweatherData: state.favorites.weatherData,\n\t};\n};\n\nexport default connect(mapStateToProps)(Favorites);\n"],"sourceRoot":""}