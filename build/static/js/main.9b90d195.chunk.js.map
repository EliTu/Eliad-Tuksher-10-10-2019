{"version":3,"sources":["components/containers/WeatherDisplayContainer/store/types.ts","components/containers/Favorites/store/types.ts","components/containers/Favorites/store/actions.ts","components/containers/WeatherDisplayContainer/store/actions.ts","components/containers/WeatherDisplayContainer/SelectedWeather/SelectedWeatherInfo/SelectedWeatherInfo.module.css","components/display/UI/Card/Card.module.css","utilities/urls/urls.ts","components/display/Navbar/NavItems/Item/Item.module.css","components/display/UI/Logo/Logo.module.css","components/containers/SearchContainer/SearchContainer.module.css","components/containers/WeatherDisplayContainer/SelectedWeather/SelectedWeather.module.css","components/display/UI/Card/Card.tsx","components/display/UI/ErrorMessage/ErrorMessage.tsx","components/containers/Layout/Layout.module.css","components/display/Navbar/Navbar.module.css","components/display/Navbar/NavItems/NavItems.module.css","components/display/UI/Icon/Icon.module.css","components/display/UI/Input/Input.module.css","components/containers/SearchContainer/SearchResults/SearchResults.module.css","components/display/UI/Icon/FavIcon/FavIcon.module.css","components/containers/WeatherDisplayContainer/FiveDaysForecast/FiveDaysForecast.module.css","components/display/UI/ErrorMessage/ErrorMessage.module.css","components/display/UI/Loader/Loader.module.css","components/containers/WeatherDisplayContainer/WeatherDisplayContainer.module.css","components/display/Footer/Footer.module.css","components/containers/Layout/Layout.tsx","components/display/Navbar/NavItems/Item/Item.tsx","components/display/Navbar/NavItems/NavItems.tsx","components/display/UI/Icon/Icon.tsx","components/display/UI/Logo/Logo.tsx","components/display/Navbar/Navbar.tsx","components/display/UI/Input/Input.tsx","components/containers/SearchContainer/SearchResults/SearchResults.tsx","components/containers/SearchContainer/store/actions.ts","components/containers/SearchContainer/store/types.ts","components/containers/SearchContainer/searchInputTemplate.ts","utilities/custom-hooks/useOutsideClick.ts","components/containers/SearchContainer/SearchContainer.tsx","components/containers/WeatherDisplayContainer/SelectedWeather/SelectedWeatherInfo/SelectedWeatherInfo.tsx","components/display/UI/Icon/FavIcon/FavIcon.tsx","utilities/convert-functions/dates.ts","components/containers/WeatherDisplayContainer/SelectedWeather/setWeatherIcon.ts","components/containers/WeatherDisplayContainer/SelectedWeather/SelectedWeather.tsx","utilities/convert-functions/fahrenheitToCelsius.ts","components/containers/WeatherDisplayContainer/FiveDaysForecast/FiveDaysForecast.tsx","components/display/UI/Loader/Loader.tsx","components/containers/WeatherDisplayContainer/WeatherDIsplayContainer.tsx","components/containers/WeatherContent/WeatherContent.tsx","components/display/Footer/Footer.tsx","utilities/hoc/LazyLoader.tsx","App.tsx","components/containers/SearchContainer/store/searchReducer.ts","components/containers/WeatherDisplayContainer/store/currentWeatherReducer.ts","components/containers/WeatherDisplayContainer/store/fiveDaysForecastReducer.ts","components/containers/Favorites/store/favoritesReducer.ts","index.tsx"],"names":["CURRENT_WEATHER_INIT","CURRENT_WEATHER_SUCCESS","CURRENT_WEATHER_FAIL","FIVE_DAYS_FORECAST_INIT","FIVE_DAYS_FORECAST_SUCCESS","FIVE_DAYS_FORECAST_FAIL","INIT_FAVORITES","ADD_TO_FAVORITES","REMOVE_FROM_FAVORITES","FAVORITE_WEATHER_DATA_INIT","GET_FAVORITES_WEATHER_DATA","initFavoritesAction","favList","localStorage","favKeyList","setItem","JSON","stringify","parse","getItem","type","localStorageList","addToFavoritesAction","key","cityName","countryName","currentFavList","some","el","push","newFavoriteKeyList","updatedAditions","removeFromFavoritesAction","filteredList","filter","favorite","updatedFavoriteKeyList","updatedRemovals","favoritesWeatherDataInitAction","getFavoritesWeatherDataAction","weatherData","favoritesWeatherData","fireCurrentWeatherHttpRequest","dispatchIdentifier","dispatch","a","setAsyncGetRequest","result","weatherResult","data","results","weatherResults","error","message","fireFiveDaysForecastHttpRequest","forecastResult","forecastList","DailyForecasts","fiveDaysForecastResults","module","exports","inputVal","requestType","url","params","apiKey","axios","get","Card","mainHeading","date","description","link","temperatures","minValue","maxValue","CardStyles","styles","headingStyle","dateStyle","temperatureStyle","descriptionStyle","className","href","ErrorMessage","errorDetails","ErrorMessageStyles","Layout","children","LayoutStyles","Item","ItemStyles","active","NavLink","to","activeClassName","exact","Navitems","NavItemsStyles","Icon","iconType","size","pulse","spin","color","IconStyles","icon","Logo","LogoStyles","brandColor","faRainbow","Navbar","NavbarStyles","NavItems","Input","elementConfig","value","isFocused","handleChange","InputStyles","focusRef","useRef","useEffect","current","focus","label","ref","onChange","data-test","connect","state","isDisplayed","search","areResultsDisplayed","currentWeatherHttpRequest","fiveDaysForecastHttpRequest","closeResultsList","resultList","searchValue","outsideClickRef","SearchResultsStyles","length","map","LocalizedName","Key","Country","AdministrativeArea","onClick","handleResultClick","ID","inputTemplateData","placeholder","useClickOutside","callbackFn","boxRef","handleOutsideClick","useCallback","event","contains","target","document","addEventListener","removeEventListener","searchResultList","httpRequest","val","searchInputValue","dataList","slice","SearchContainerStyles","InputWrapper","useState","inputData","setInputData","keyStrokeTimer","setTimeout","clearTimeout","faSearch","updatedValue","updatedSearchInput","handleSearchInputChange","SelectedWeatherInfo","weatherIconType","isLoading","infoLink","temperature","day","SelectedWeatherInfoStyles","dayStyle","cityStyle","countryStyle","FavIcon","isFavorite","FavIconStyles","innerHeartColor","join","innerHeart","hallowHeart","setDayOfTheWeek","epochDate","Date","getDay","setCorrectDateFormat","dateString","split","reverse","setWeatherIcon","isDay","iconNumber","faSun","faMoon","faCloudSun","faCloudMoon","faCloud","faSmog","faCloudRain","faCloudMoonRain","faCloudSunRain","faCloudShowersHeavy","faWind","faSnowflake","currentWeather","selectedResult","searchResults","favoritesList","favorites","setNewFavoriteItem","removeFromFavorites","initFavorites","memo","SelectedWeatherStyles","buttonWrapper","setIsFavorite","setWeatherIconType","localDate","LocalObservationDateTime","EpochTime","WeatherText","WeatherIcon","IsDayTime","Link","Temperature","isListed","checkForFavoriteListing","weatherIcon","Metric","Value","Unit","handleFavoriteButtonClick","fahrenheitToCelsius","fahrenheitValue","Math","round","forecastResults","fiveDaysForecast","FiveDaysForecastStyles","i","EpochDate","Day","maxVal","Minimum","maxTemp","minVal","Maximum","minTemp","IconPhrase","Loader","isCurrentWeatherLoading","weatherError","isFiveDaysForecastLoading","FiveDaysForecastError","fiveDaysForecastError","WeatherDisplayContainerStyles","WeatherContent","Footer","FooterStyles","rel","LazyLoader","Component","props","fallback","Favorites","lazy","About","initFavoritesList","setDefaultWeatherData","setDefaultFiveDaysForecast","Switch","Route","path","component","INITIAL_STATE","searchReducer","action","currentWeatherReducer","fiveDaysForecastReducer","INIT_STATE","favoritesReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9b90d195.chunk.js","sourcesContent":["// Current weather types:\nexport interface CurrentWeatherInitState {\n\tselectedResult: {}[];\n\terror?: string;\n\tisLoading?: boolean;\n}\n\nexport const CURRENT_WEATHER_INIT = 'CURRENT_WEATHER_INIT';\nexport const CURRENT_WEATHER_SUCCESS = 'CURRENT_WEATHER_SUCCESS';\nexport const CURRENT_WEATHER_FAIL = 'CURRENT_WEATHER_FAIL';\n\ninterface currentWeatherInitAction {\n\ttype: typeof CURRENT_WEATHER_INIT;\n}\n\ninterface currentWeatherSuccessAction {\n\ttype: typeof CURRENT_WEATHER_SUCCESS;\n\tweatherResults: {}[];\n}\n\ninterface currentWeatherFailAction {\n\ttype: typeof CURRENT_WEATHER_FAIL;\n\terror: string;\n}\n\nexport type CurrentWeatherActionTypes =\n\t| currentWeatherInitAction\n\t| currentWeatherSuccessAction\n\t| currentWeatherFailAction;\n\n// FiveDaysWeather types:\nexport interface FiveDaysForecastInitState {\n\tresultList: {}[];\n\terror?: string;\n\tisLoading: boolean;\n}\n\nexport const FIVE_DAYS_FORECAST_INIT = 'FIVE_DAYS_FORECAST_INIT';\nexport const FIVE_DAYS_FORECAST_SUCCESS = 'FIVE_DAYS_FORECAST_SUCCESS';\nexport const FIVE_DAYS_FORECAST_FAIL = 'FIVE_DAYS_FORECAST_FAIL';\n\ninterface fiveDaysForecastInitAction {\n\ttype: typeof FIVE_DAYS_FORECAST_INIT;\n}\n\ninterface fiveDaysForecastSuccessAction {\n\ttype: typeof FIVE_DAYS_FORECAST_SUCCESS;\n\tfiveDaysForecastResults: any;\n}\n\ninterface fiveDaysForecastFailAction {\n\ttype: typeof FIVE_DAYS_FORECAST_FAIL;\n\terror: string;\n}\n\nexport type FiveDaysForecastActionTypes =\n\t| fiveDaysForecastInitAction\n\t| fiveDaysForecastSuccessAction\n\t| fiveDaysForecastFailAction;\n","// Current weather types:\nexport interface favortiesInitState {\n\tisLoading: boolean;\n\tfavoritesList: { key: string; cityName: string; countryName: string }[];\n\tweatherData: {\n\t\tkey: string;\n\t\tcityName: string;\n\t\tcountryName: string;\n\t\tWeatherText: string;\n\t\tTemperature: { Metric: { Value: number; Unit: string } };\n\t}[];\n}\n\nexport const INIT_FAVORITES = 'INIT_FAVORITES';\nexport const ADD_TO_FAVORITES = 'ADD_TO_FAVORITES';\nexport const REMOVE_FROM_FAVORITES = 'REMOVE_FROM_FAVORITES';\nexport const FAVORITE_WEATHER_DATA_INIT = 'FAVORITE_WEATHER_DATA_INIT';\nexport const GET_FAVORITES_WEATHER_DATA = 'GET_FAVORITES_WEATHER_DATA';\n\ninterface initFavoritesAction {\n\ttype: typeof INIT_FAVORITES;\n\tlocalStorageList: { key: string; cityName: string; countryName: string }[];\n}\n\ninterface addToFavoritesAction {\n\ttype: typeof ADD_TO_FAVORITES;\n\tupdatedAditions: { key: string; cityName: string; countryName: string }[];\n}\n\ninterface removeFromFavorites {\n\ttype: typeof REMOVE_FROM_FAVORITES;\n\tupdatedRemovals: { key: string; cityName: string; countryName: string }[];\n}\n\ninterface favoriteWeatherDataInitAction {\n\ttype: typeof FAVORITE_WEATHER_DATA_INIT;\n}\n\ninterface getFavoritesWEatherDataAction {\n\ttype: typeof GET_FAVORITES_WEATHER_DATA;\n\tfavoritesWeatherData: {\n\t\tkey: string;\n\t\tcityName: string;\n\t\tcountryName: string;\n\t\tWeatherText: string;\n\t\tTemperature: { Metric: { Value: number; Unit: string } };\n\t};\n}\n\nexport type favoritesActionTypes =\n\t| initFavoritesAction\n\t| addToFavoritesAction\n\t| removeFromFavorites\n\t| favoriteWeatherDataInitAction\n\t| getFavoritesWEatherDataAction;\n","import {\n\tINIT_FAVORITES,\n\tADD_TO_FAVORITES,\n\tREMOVE_FROM_FAVORITES,\n\tFAVORITE_WEATHER_DATA_INIT,\n\tGET_FAVORITES_WEATHER_DATA,\n\tfavoritesActionTypes,\n} from './types';\nimport { Action, ActionCreator } from 'redux';\n\nexport const initFavoritesAction: ActionCreator<\n\tAction\n> = (): favoritesActionTypes => {\n\t// If there isn't any favKeyList in localStorage, then init it:\n\tif (!localStorage.favKeyList)\n\t\tlocalStorage.setItem('favKeyList', JSON.stringify([]));\n\n\t// Check localStorage for the favKeyList key, if available get the list and parse it back to an array:\n\tlet favList;\n\tfavList = JSON.parse(localStorage.getItem('favKeyList')!) || [];\n\t\n\treturn {\n\t\ttype: INIT_FAVORITES,\n\t\tlocalStorageList: favList,\n\t};\n};\n\nexport const addToFavoritesAction: ActionCreator<Action> = (\n\tkey: string,\n\tcityName: string,\n\tcountryName: string\n): favoritesActionTypes => {\n\t// Fetch the current list and parse it, push the new key if its not existing already and set it again, then fetch it:\n\tconst currentFavList =\n\t\tJSON.parse(localStorage.getItem('favKeyList')!) || [];\n\n\tif (!currentFavList.some((el: { key: string }) => el.key === key))\n\t\tcurrentFavList.push({\n\t\t\tkey: key,\n\t\t\tcityName: cityName,\n\t\t\tcountryName: countryName,\n\t\t});\n\tlocalStorage.setItem('favKeyList', JSON.stringify(currentFavList));\n\n\tconst newFavoriteKeyList =\n\t\tJSON.parse(localStorage.getItem('favKeyList')!) || [];\n\n\treturn {\n\t\ttype: ADD_TO_FAVORITES,\n\t\tupdatedAditions: newFavoriteKeyList,\n\t};\n};\n\nexport const removeFromFavoritesAction: ActionCreator<Action> = (\n\tkey: string\n): favoritesActionTypes => {\n\t// Fetch the current list and parse it, filter the relevant element, set it again then fetch it:\n\tconst currentFavList =\n\t\tJSON.parse(localStorage.getItem('favKeyList')!) || [];\n\n\tconst filteredList = currentFavList.filter(\n\t\t(favorite: { key: string }) => favorite.key !== key\n\t);\n\n\tlocalStorage.setItem('favKeyList', JSON.stringify(filteredList));\n\n\tconst updatedFavoriteKeyList =\n\t\tJSON.parse(localStorage.getItem('favKeyList')!) || [];\n\n\treturn {\n\t\ttype: REMOVE_FROM_FAVORITES,\n\t\tupdatedRemovals: updatedFavoriteKeyList,\n\t};\n};\n\nexport const favoritesWeatherDataInitAction: ActionCreator<Action> = () => {\n\treturn {\n\t\ttype: FAVORITE_WEATHER_DATA_INIT,\n\t};\n};\n\nexport const getFavoritesWeatherDataAction: ActionCreator<\n\tAction\n> = (weatherData: {\n\tkey: string;\n\tcityName: string;\n\tcountryName: string;\n\tWeatherText: string;\n\tTemperature: { Metric: { Value: number; Unit: string } };\n}): favoritesActionTypes => {\n\treturn {\n\t\ttype: GET_FAVORITES_WEATHER_DATA,\n\t\tfavoritesWeatherData: weatherData,\n\t};\n};\n","import {\n\tCURRENT_WEATHER_INIT,\n\tCURRENT_WEATHER_SUCCESS,\n\tCURRENT_WEATHER_FAIL,\n\tCurrentWeatherActionTypes,\n\tFIVE_DAYS_FORECAST_INIT,\n\tFIVE_DAYS_FORECAST_SUCCESS,\n\tFIVE_DAYS_FORECAST_FAIL,\n\tFiveDaysForecastActionTypes,\n} from './types';\nimport {\n\tfavoritesWeatherDataInitAction,\n\tgetFavoritesWeatherDataAction,\n} from '../../Favorites/store/actions';\nimport { Action, ActionCreator } from 'redux';\nimport setAsyncGetRequest from '../../../../utilities/urls/urls';\n\n// CurrentWeather actions:\nexport const currentWeatherInitAction: ActionCreator<\n\tAction\n> = (): CurrentWeatherActionTypes => {\n\treturn {\n\t\ttype: CURRENT_WEATHER_INIT,\n\t};\n};\n\nexport const currentWeatherSuccessAction: ActionCreator<Action> = (\n\tresults: {}[]\n): CurrentWeatherActionTypes => {\n\treturn {\n\t\ttype: CURRENT_WEATHER_SUCCESS,\n\t\tweatherResults: results,\n\t};\n};\n\nexport const currentWeatherFailAction: ActionCreator<Action> = (\n\terror: string\n): CurrentWeatherActionTypes => {\n\treturn {\n\t\ttype: CURRENT_WEATHER_FAIL,\n\t\terror: error,\n\t};\n};\n\n// Thunk async action creator:\nexport const fireCurrentWeatherHttpRequest = (\n\tkey: string,\n\tdispatchIdentifier: string,\n\tcityName: string,\n\tcountryName: string\n) => {\n\treturn async (dispatch: any) => {\n\t\tif (dispatchIdentifier === 'currentWeather')\n\t\t\tdispatch(currentWeatherInitAction());\n\t\tif (dispatchIdentifier === 'favoritesWeather')\n\t\t\tdispatch(favoritesWeatherDataInitAction());\n\n\t\tif (key)\n\t\t\ttry {\n\t\t\t\tconst result = await setAsyncGetRequest(key, 'currentWeather');\n\n\t\t\t\tconst weatherResult = {\n\t\t\t\t\t...result.data[0],\n\t\t\t\t\tcityName: cityName,\n\t\t\t\t\tcountryName: countryName,\n\t\t\t\t\tkey: key,\n\t\t\t\t};\n\n\t\t\t\tif (dispatchIdentifier === 'currentWeather')\n\t\t\t\t\tdispatch(currentWeatherSuccessAction(weatherResult));\n\t\t\t\tif (dispatchIdentifier === 'favoritesWeather')\n\t\t\t\t\tdispatch(getFavoritesWeatherDataAction(weatherResult));\n\t\t\t} catch (error) {\n\t\t\t\tdispatch(currentWeatherFailAction(error.message));\n\t\t\t}\n\t};\n};\n\n// FiveDaysForecast actions:\nexport const fiveDaysForecastInitAction: ActionCreator<\n\tAction\n> = (): FiveDaysForecastActionTypes => {\n\treturn {\n\t\ttype: FIVE_DAYS_FORECAST_INIT,\n\t};\n};\n\nexport const fiveDaysForecastSuccessAction: ActionCreator<Action> = (\n\tresults: {}[]\n): FiveDaysForecastActionTypes => {\n\treturn {\n\t\ttype: FIVE_DAYS_FORECAST_SUCCESS,\n\t\tfiveDaysForecastResults: results,\n\t};\n};\n\nexport const fiveDaysForecastFailAction: ActionCreator<Action> = (\n\terror: string\n): FiveDaysForecastActionTypes => {\n\treturn {\n\t\ttype: FIVE_DAYS_FORECAST_FAIL,\n\t\terror: error,\n\t};\n};\n\n// Thunk async action creator:\nexport const fireFiveDaysForecastHttpRequest = (key: string) => {\n\treturn async (dispatch: any) => {\n\t\tdispatch(fiveDaysForecastInitAction());\n\n\t\tif (key)\n\t\t\ttry {\n\t\t\t\tconst forecastResult = await setAsyncGetRequest(\n\t\t\t\t\tkey,\n\t\t\t\t\t'fiveDaysForecast'\n\t\t\t\t);\n\t\t\t\tconst forecastList = forecastResult.data.DailyForecasts;\n\n\t\t\t\tdispatch(fiveDaysForecastSuccessAction(forecastList));\n\t\t\t} catch (error) {\n\t\t\t\tdispatch(fiveDaysForecastFailAction(error.message));\n\t\t\t}\n\t};\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SelectedWeatherInfoStyles\":\"SelectedWeatherInfo_SelectedWeatherInfoStyles__BhECr\",\"dateStyle\":\"SelectedWeatherInfo_dateStyle__2nQzI\",\"dayStyle\":\"SelectedWeatherInfo_dayStyle__3s6Hs\",\"cityStyle\":\"SelectedWeatherInfo_cityStyle__1poW2\",\"countryStyle\":\"SelectedWeatherInfo_countryStyle__3pCBH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardStyles\":\"Card_CardStyles__12m3x\",\"dateStyle\":\"Card_dateStyle__A5KI6\",\"temperatureStyle\":\"Card_temperatureStyle__1LWs2\",\"descriptionStyle\":\"Card_descriptionStyle__34If9\"};","import axios from 'axios';\n\n// Set an async axios GET request based on the requestType:\nconst setAsyncGetRequest = (inputVal: string, requestType: string) => {\n\t// Accuweather API key (not secure):\n\tconst apiKey: string = 'SBAMTrQzOvBi5NGeuxMI72DNOGPsCJKv';\n\n\tlet url: string;\n\tlet params: string;\n\n\tswitch (requestType) {\n\t\tcase 'search':\n\t\t\turl =\n\t\t\t\t'https://dataservice.accuweather.com/locations/v1/cities/autocomplete';\n\t\t\tparams = `?apikey=${apiKey}&q=${inputVal}&language=en-us HTTP/1.1`;\n\t\t\tbreak;\n\n\t\tcase 'currentWeather':\n\t\t\turl = 'https://dataservice.accuweather.com/currentconditions/v1/';\n\t\t\tparams = `${inputVal}?apikey=${apiKey}&language=en-us&metric=true HTTP/1.1`;\n\t\t\tbreak;\n\n\t\tcase 'fiveDaysForecast':\n\t\t\turl =\n\t\t\t\t'https://dataservice.accuweather.com/forecasts/v1/daily/5day/';\n\t\t\tparams = `${inputVal}?apikey=${apiKey}&language=en-us&metric=true HTTP/1.1`;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\turl = '';\n\t\t\tparams = '';\n\t}\n\n\treturn axios.get(`${url}${params}`);\n};\n\nexport default setAsyncGetRequest;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ItemStyles\":\"Item_ItemStyles__3X6fe\",\"active\":\"Item_active__ldqVP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LogoStyles\":\"Logo_LogoStyles__8YTVB\",\"brandColor\":\"Logo_brandColor__3hLRn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchContainerStyles\":\"SearchContainer_SearchContainerStyles__PEvll\",\"InputWrapper\":\"SearchContainer_InputWrapper__31Kob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SelectedWeatherStyles\":\"SelectedWeather_SelectedWeatherStyles__10gro\",\"buttonWrapper\":\"SelectedWeather_buttonWrapper__139YR\"};","import React from 'react';\nimport styles from './Card.module.css';\n\ninterface IProps {\n\tmainHeading: string;\n\tdate?: string;\n\tlink?: string;\n\tdescription: string;\n\ttemperatures?: string;\n\tminValue?: number;\n\tmaxValue?: number;\n}\n\nconst Card: React.FC<IProps> = ({\n\tmainHeading,\n\tdate,\n\tdescription,\n\tlink,\n\ttemperatures,\n\tminValue,\n\tmaxValue,\n}) => {\n\tconst {\n\t\tCardStyles,\n\t\theadingStyle,\n\t\tdateStyle,\n\t\ttemperatureStyle,\n\t\tdescriptionStyle,\n\t} = styles;\n\n\treturn (\n\t\t<div className={CardStyles}>\n\t\t\t<h3 className={headingStyle}>\n\t\t\t\t<a href={link}>{mainHeading}</a>\n\t\t\t</h3>\n\t\t\t<h3 className={dateStyle}>{date}</h3>\n\t\t\t{temperatures && (\n\t\t\t\t<h4 className={temperatureStyle}>\n\t\t\t\t\t{`${temperatures}`}\n\t\t\t\t\t<span>&#176;</span>\n\t\t\t\t\t{`C`}\n\t\t\t\t</h4>\n\t\t\t)}\n\t\t\t{minValue && maxValue && (\n\t\t\t\t<h4 className={temperatureStyle}>\n\t\t\t\t\t{`${maxValue}`}\n\t\t\t\t\t<span>&#176;</span>\n\t\t\t\t\t{`C`} - {`${minValue}`}\n\t\t\t\t\t<span>&#176;</span>\n\t\t\t\t\t{`C`}\n\t\t\t\t</h4>\n\t\t\t)}\n\t\t\t<p className={descriptionStyle}>{description}</p>\n\t\t</div>\n\t);\n};\n\nexport default Card;\n","import React from 'react';\nimport styles from './ErrorMessage.module.css';\n\ninterface IProps {\n\terrorDetails: string | undefined;\n}\n\nexport const ErrorMessage: React.FC<IProps> = ({ errorDetails }) => {\n\tconst { ErrorMessageStyles } = styles;\n\n\treturn (\n\t\t<div className={ErrorMessageStyles}>\n\t\t\t<p>Oops...</p>\n\t\t\t<p>Something went wrong with the server request :(</p>\n\t\t\t<p>\n\t\t\t\tThe reason seems to be: <span>{errorDetails}</span>\n\t\t\t</p>\n\t\t\t<p>Please try again in a short while!</p>\n\t\t</div>\n\t);\n};\n\nexport default ErrorMessage;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LayoutStyles\":\"Layout_LayoutStyles__2U0cE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavbarStyles\":\"Navbar_NavbarStyles__26k2E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItemsStyles\":\"NavItems_NavItemsStyles__37agz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IconStyles\":\"Icon_IconStyles__2gRSl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputStyles\":\"Input_InputStyles__ToHjR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchResultsStyles\":\"SearchResults_SearchResultsStyles__1H-6h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FavIconStyles\":\"FavIcon_FavIconStyles__2160t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FiveDaysForecastStyles\":\"FiveDaysForecast_FiveDaysForecastStyles__3v8U2\",\"SearchResultsStyles\":\"FiveDaysForecast_SearchResultsStyles__2QOY9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorMessageStyles\":\"ErrorMessage_ErrorMessageStyles__2Vee_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__3aE2N\",\"load1\":\"Loader_load1__30WB8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WeatherDisplayContainerStyles\":\"WeatherDisplayContainer_WeatherDisplayContainerStyles__3anZ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FooterStyles\":\"Footer_FooterStyles__3B4ah\",\"FooterStylesa\":\"Footer_FooterStylesa__3E5op\"};","import React from 'react';\nimport styles from './Layout.module.css';\n\ninterface IProps {}\n\nconst Layout: React.FC<IProps> = ({ children }) => {\n\tconst { LayoutStyles } = styles;\n\n\treturn (\n\t\t<div className={LayoutStyles}>\n\t\t\t<main>{children}</main>\n\t\t</div>\n\t);\n};\n\nexport default Layout;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './Item.module.css';\n\ninterface IProps {\n\tchildren: string;\n\tlink: string;\n}\n\nconst Item: React.FC<IProps> = ({ children, link }) => {\n\tconst { ItemStyles, active } = styles;\n\n\treturn (\n\t\t<NavLink\n\t\t\tclassName={ItemStyles}\n\t\t\tto={link}\n\t\t\tactiveClassName={active}\n\t\t\texact\n\t\t>\n\t\t\t{children}\n\t\t</NavLink>\n\t);\n};\n\nexport default Item;\n","import React from 'react';\nimport Item from './Item/Item';\nimport styles from './NavItems.module.css';\n\nconst Navitems: React.FC = () => {\n\tconst { NavItemsStyles } = styles;\n\n\treturn (\n\t\t<div className={NavItemsStyles}>\n\t\t\t<Item link={'/'}>Home</Item>\n\t\t\t<Item link={'/favorites'}>My Favorites</Item>\n\t\t\t<Item link={'/about'}>About</Item>\n\t\t</div>\n\t);\n};\n\nexport default Navitems;\n","import React from 'react';\nimport styles from './Icon.module.css';\nimport {\n\tFontAwesomeIcon,\n\tFontAwesomeIconProps,\n} from '@fortawesome/react-fontawesome';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\n\ninterface IProps {\n\ticonType: IconDefinition;\n\tsize: FontAwesomeIconProps['size'];\n\tcolor?: FontAwesomeIconProps['color'];\n\tpulse?: boolean;\n\tspin?: boolean;\n}\n\nconst Icon: React.FC<IProps> = ({ iconType, size, pulse, spin, color }) => {\n\tconst { IconStyles } = styles;\n\n\treturn (\n\t\t<div className={IconStyles}>\n\t\t\t<FontAwesomeIcon\n\t\t\t\ticon={iconType}\n\t\t\t\tsize={size}\n\t\t\t\tcolor={color}\n\t\t\t\tpulse={pulse}\n\t\t\t\tspin={spin}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default Icon;\n","import React from 'react';\nimport Icon from '../Icon/Icon';\nimport { faRainbow } from '@fortawesome/free-solid-svg-icons';\nimport styles from './Logo.module.css';\n\nconst Logo: React.FC = () => {\n\tconst { LogoStyles, brandColor } = styles;\n\n\treturn (\n\t\t<div className={LogoStyles}>\n\t\t\t<Icon iconType={faRainbow} size={'4x'} color={'#7744a2'} />\n\t\t\t<ul>\n\t\t\t\t<li className={brandColor}>Herolo's</li>\n\t\t\t\t<li>Weather app</li>\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nexport default Logo;\n","import React from 'react';\nimport styles from './Navbar.module.css';\nimport NavItems from './NavItems/NavItems';\nimport Logo from '../UI/Logo/Logo';\n\ninterface IProps {}\n\nconst Navbar: React.FC = () => {\n\tconst { NavbarStyles } = styles;\n\n\treturn (\n\t\t<header className={NavbarStyles}>\n\t\t\t<Logo />\n\t\t\t<NavItems />\n\t\t</header>\n\t);\n};\n\nexport default Navbar;\n","import React, { useRef, useEffect } from 'react';\nimport styles from './Input.module.css';\nimport { IInputProps } from './inputPropsInterface';\n\nconst Input: React.FC<IInputProps> = ({\n\telementConfig,\n\tvalue,\n\tisFocused,\n\thandleChange,\n}) => {\n\tconst { InputStyles } = styles;\n\n\t// Focus the first input field upon component mount\n\tconst focusRef: React.RefObject<any> = useRef();\n\n\tuseEffect(() => {\n\t\tif (isFocused) focusRef.current.focus();\n\t}, [isFocused]);\n\treturn (\n\t\t<div className={InputStyles}>\n\t\t\t<label>{elementConfig.label}</label>\n\t\t\t<input\n\t\t\t\tref={focusRef}\n\t\t\t\t{...elementConfig}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tdata-test=\"input-test\"\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default Input;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { fireCurrentWeatherHttpRequest } from '../../WeatherDisplayContainer/store/actions';\nimport { fireFiveDaysForecastHttpRequest } from '../../WeatherDisplayContainer/store/actions';\nimport { closeSearchResultsList } from '../store/actions';\nimport styles from './SearchResults.module.css';\nimport { ResultListTypes } from '../SearchContainer';\n\ninterface IProps {\n\tresultList: ResultListTypes[];\n\tsearchValue: any;\n\tisDisplayed: boolean;\n\terror: string;\n\toutsideClickRef?: React.RefObject<any>;\n\tcurrentWeatherHttpRequest: (\n\t\tkey: string,\n\t\tdispatchIdentifier: string,\n\t\tcityName: string,\n\t\tcountryName: string\n\t) => void;\n\tfiveDaysForecastHttpRequest: (key: string) => void;\n\tcloseResultsList: () => void;\n}\n\nexport const SearchResults: React.FC<IProps> = ({\n\tresultList,\n\tsearchValue,\n\tisDisplayed,\n\terror,\n\toutsideClickRef,\n\tcurrentWeatherHttpRequest,\n\tfiveDaysForecastHttpRequest,\n\tcloseResultsList,\n}) => {\n\tconst { SearchResultsStyles } = styles;\n\n\tconst handleResultClick = (\n\t\tkey: string,\n\t\tcityName: string,\n\t\tcountryName: string\n\t) => {\n\t\tcurrentWeatherHttpRequest(key, 'currentWeather', cityName, countryName);\n\t\tfiveDaysForecastHttpRequest(key);\n\t\tcloseResultsList();\n\t};\n\n\treturn resultList.length > 0 &&\n\t\tsearchValue.length >= 2 &&\n\t\tisDisplayed &&\n\t\t!error ? (\n\t\t<div className={SearchResultsStyles} ref={outsideClickRef}>\n\t\t\t<ul>\n\t\t\t\t{resultList.map(\n\t\t\t\t\t({ LocalizedName, Key, Country, AdministrativeArea }) => (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={Key}\n\t\t\t\t\t\t\tonClick={key =>\n\t\t\t\t\t\t\t\thandleResultClick(\n\t\t\t\t\t\t\t\t\tKey,\n\t\t\t\t\t\t\t\t\tLocalizedName,\n\t\t\t\t\t\t\t\t\tCountry.LocalizedName\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>{`${LocalizedName}, ${AdministrativeArea.ID}, ${Country.LocalizedName}`}</li>\n\t\t\t\t\t)\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t</div>\n\t) : null;\n};\n\n// Redux setup:\nconst mapStateToProps = (state: any) => {\n\treturn {\n\t\tisDisplayed: state.search.areResultsDisplayed,\n\t\terror: state.search.error,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, any>) => {\n\treturn {\n\t\tcurrentWeatherHttpRequest: (\n\t\t\tkey: string,\n\t\t\tdispatchIdentifier: string,\n\t\t\tcityName: string,\n\t\t\tcountryName: string\n\t\t) =>\n\t\t\tdispatch(\n\t\t\t\tfireCurrentWeatherHttpRequest(\n\t\t\t\t\tkey,\n\t\t\t\t\t'currentWeather',\n\t\t\t\t\tcityName,\n\t\t\t\t\tcountryName\n\t\t\t\t)\n\t\t\t),\n\t\tfiveDaysForecastHttpRequest: (key: string) =>\n\t\t\tdispatch(fireFiveDaysForecastHttpRequest(key)),\n\t\tcloseResultsList: () => dispatch(closeSearchResultsList()),\n\t};\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(SearchResults);\n","import {\n\tSearchInitState,\n\tSEARCH_REQUEST_INIT,\n\tSEARCH_REQUEST_SUCCESS,\n\tSEARCH_REQUEST_FAIL,\n\tCLOSE_SEARCH_RESULTS,\n\tSearchResultActionTypes,\n} from './types';\nimport { Action, ActionCreator } from 'redux';\nimport setAsyncGetRequest from '../../../../utilities/urls/urls';\n\nexport const searchRequestInit: ActionCreator<\n\tAction\n> = (): SearchResultActionTypes => {\n\treturn {\n\t\ttype: SEARCH_REQUEST_INIT,\n\t};\n};\n\nexport const searchRequestSuccess: ActionCreator<Action> = (\n\tsearchResults: SearchInitState\n): SearchResultActionTypes => {\n\treturn {\n\t\ttype: SEARCH_REQUEST_SUCCESS,\n\t\tresults: searchResults,\n\t};\n};\n\nexport const searchRequestFail: ActionCreator<Action> = (\n\terror: string\n): SearchResultActionTypes => {\n\treturn {\n\t\ttype: SEARCH_REQUEST_FAIL,\n\t\terror: error,\n\t};\n};\n\nexport const closeSearchResultsList: ActionCreator<\n\tAction\n> = (): SearchResultActionTypes => {\n\treturn {\n\t\ttype: CLOSE_SEARCH_RESULTS,\n\t};\n};\n// Thunk async action creator:\nexport const fireSearchHttpRequest = (searchInputValue: string) => {\n\treturn async (dispatch: any) => {\n\t\tdispatch(searchRequestInit());\n\t\tif (searchInputValue)\n\t\t\ttry {\n\t\t\t\t// Fire off an HTTP request only if the searchInputValue is not an empty string\n\t\t\t\tlet result = await setAsyncGetRequest(\n\t\t\t\t\tsearchInputValue,\n\t\t\t\t\t'search'\n\t\t\t\t);\n\n\t\t\t\tconst dataList: any[] = result.data.slice(0, 5);\n\t\t\t\tdispatch(searchRequestSuccess(dataList));\n\t\t\t} catch (error) {\n\t\t\t\tdispatch(searchRequestFail(error.message));\n\t\t\t}\n\t};\n};\n","export interface SearchInitState {\n\tresults: any;\n\tisLoading?: boolean;\n\terror: string;\n\tareResultsDisplayed: boolean;\n}\n\nexport const SEARCH_REQUEST_INIT = 'SEARCH_REQUEST_INIT';\nexport const SEARCH_REQUEST_SUCCESS = 'SEARCH_REQUEST_SUCCESS';\nexport const SEARCH_REQUEST_FAIL = 'SEARCH_REQUEST_FAIL';\nexport const CLOSE_SEARCH_RESULTS = 'CLOSE_SEARCH_RESULTS';\n\ninterface SearchRequestInitAction {\n\ttype: typeof SEARCH_REQUEST_INIT;\n}\n\ninterface SearchRequestSuccessAction {\n\ttype: typeof SEARCH_REQUEST_SUCCESS;\n\tresults: any;\n}\n\ninterface SearchRequestFail {\n\ttype: typeof SEARCH_REQUEST_FAIL;\n\terror: string;\n}\n\ninterface closeSearchResults {\n\ttype: typeof CLOSE_SEARCH_RESULTS;\n}\n\nexport type SearchResultActionTypes =\n\t| SearchRequestInitAction\n\t| SearchRequestSuccessAction\n\t| SearchRequestFail\n\t| closeSearchResults;\n","import { IInputProps } from '../../display/UI/Input/inputPropsInterface';\n\nexport const inputTemplateData: IInputProps = {\n\telementConfig: {\n\t\ttype: 'search',\n\t\tplaceholder:\n\t\t\t'Please start entering a city name, e.g: London, New-York, Berlin etc...',\n\t\tlabel: '',\n\t},\n\tvalue: '',\n\tisFocused: false,\n};\n","import { useRef, useCallback, useEffect } from 'react';\n\n// Hook to detect clicks ourside of a certain node, and run a function in response on that node:\nconst useClickOutside = (\n\tisDisplayed: boolean,\n\tcallbackFn: () => void\n): React.RefObject<any> => {\n\tconst boxRef: React.RefObject<any> = useRef();\n\tconst handleOutsideClick = useCallback(\n\t\tevent => {\n\t\t\tif (isDisplayed && !boxRef.current.contains(event.target)) {\n\t\t\t\tcallbackFn();\n\t\t\t}\n\t\t},\n\t\t[callbackFn, isDisplayed]\n\t);\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('click', handleOutsideClick);\n\t\treturn () => document.removeEventListener('click', handleOutsideClick);\n\t}, [handleOutsideClick]);\n\n\treturn boxRef;\n};\n\nexport default useClickOutside;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport Input from '../../display/UI/Input/Input';\nimport Icon from '../../display/UI/Icon/Icon';\nimport SearchResults from './SearchResults/SearchResults';\nimport { inputTemplateData } from './searchInputTemplate';\nimport { fireSearchHttpRequest } from './store/actions';\nimport { closeSearchResultsList } from './store/actions';\nimport useClickOutside from '../../../utilities/custom-hooks/useOutsideClick';\nimport styles from './SearchContainer.module.css';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nexport type ResultListTypes = {\n\tLocalizedName: string;\n\tKey: string;\n\tCountry: { LocalizedName: string };\n\tAdministrativeArea: { ID: string };\n};\n\ninterface IProps {\n\thttpRequest: (val: any) => void;\n\tcloseResultsList: () => void;\n\tsearchResultList: ResultListTypes[];\n\tisDisplayed: boolean;\n}\n\nexport const SearchContainer: React.FC<IProps> = ({\n\thttpRequest,\n\tsearchResultList,\n\tcloseResultsList,\n\tisDisplayed,\n}) => {\n\tconst { SearchContainerStyles, InputWrapper } = styles;\n\n\tconst [inputData, setInputData] = useState(inputTemplateData);\n\n\tconst handleSearchInputChange: (e: any) => void = (event: any) => {\n\t\tconst updatedValue: string = event.target.value;\n\t\tconst updatedSearchInput = {\n\t\t\t...inputTemplateData,\n\t\t\tvalue: updatedValue,\n\t\t};\n\n\t\tsetInputData(() => updatedSearchInput);\n\t};\n\n\t// Set a timer for limiting the amount of HTTP requests upon changes in the input value & if value is not '':\n\tuseEffect(() => {\n\t\tconst keyStrokeTimer: NodeJS.Timeout = setTimeout(() => {\n\t\t\tif (inputData.value) httpRequest(inputData.value);\n\t\t}, 500);\n\t\treturn () => clearTimeout(keyStrokeTimer);\n\t}, [httpRequest, inputData.value]);\n\n\t// Set the isDisplayed to false if the value passed in the Input is an empty string\n\tuseEffect(() => {\n\t\tif (!inputData.value) closeResultsList();\n\t}, [closeResultsList, inputData.value]);\n\n\t// Set the isDisplayed to false upon clicking outside of the SearchResults component scope\n\tconst onOutsideClick = () => closeResultsList();\n\tconst outsideClickRef: React.RefObject<any> = useClickOutside(\n\t\tisDisplayed,\n\t\tonOutsideClick\n\t);\n\n\treturn (\n\t\t<div className={SearchContainerStyles}>\n\t\t\t<div className={InputWrapper}>\n\t\t\t\t<Icon iconType={faSearch} size={'2x'} />\n\t\t\t\t<Input\n\t\t\t\t\telementConfig={{ ...inputData.elementConfig }}\n\t\t\t\t\tvalue={inputData.value}\n\t\t\t\t\tisFocused={inputData.isFocused}\n\t\t\t\t\thandleChange={event => handleSearchInputChange(event)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<SearchResults\n\t\t\t\tresultList={searchResultList}\n\t\t\t\tsearchValue={inputData.value}\n\t\t\t\toutsideClickRef={outsideClickRef}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\n// Redux state & dispatch setup:\nconst mapStateToProps = (state: any) => {\n\treturn {\n\t\tsearchResultList: state.search.results,\n\t\tisDisplayed: state.search.areResultsDisplayed,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, any>) => {\n\treturn {\n\t\thttpRequest: (val: string) => dispatch(fireSearchHttpRequest(val)),\n\t\tcloseResultsList: () => dispatch(closeSearchResultsList()),\n\t};\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(SearchContainer);\n","import React from 'react';\nimport Icon from '../../../../display/UI/Icon/Icon';\nimport styles from './SelectedWeatherInfo.module.css';\nimport { IProps } from './propsInterface';\n\nconst SelectedWeatherInfo: React.FC<IProps> = ({\n\tweatherIconType,\n\tisLoading,\n\tinfoLink,\n\tcityName,\n\tcountryName,\n\ttemperature,\n\tday,\n\tdate,\n}) => {\n\tconst {\n\t\tSelectedWeatherInfoStyles,\n\t\tdayStyle,\n\t\tdateStyle,\n\t\tcityStyle,\n\t\tcountryStyle,\n\t} = styles;\n\n\treturn (\n\t\t<div className={SelectedWeatherInfoStyles}>\n\t\t\t{!isLoading && temperature && (\n\t\t\t\t<>\n\t\t\t\t\t<Icon iconType={weatherIconType} size={'9x'} />\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<p className={dayStyle}>{day}</p>\n\t\t\t\t\t\t\t<p className={dateStyle}>{date}</p>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a href={infoLink} className={cityStyle}>\n\t\t\t\t\t\t\t\t{cityName},\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<p className={countryStyle}>{countryName}</p>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default SelectedWeatherInfo;\n","import React from 'react';\nimport styles from './FavIcon.module.css';\nimport Icon from '../Icon';\nimport { faHeart as innerHeart } from '@fortawesome/free-solid-svg-icons';\nimport { faHeart as hallowHeart } from '@fortawesome/free-regular-svg-icons';\n\ninterface IProps {\n\tisFavorite: boolean;\n}\n\nconst FavIcon: React.FC<IProps> = ({ isFavorite }) => {\n\tconst { FavIconStyles } = styles;\n\tconst innerHeartColor = !isFavorite ? 'transparent' : '#cc61f7db';\n\tconst hallowHeartColor = !isFavorite ? '#282828c0' : '#282828c0';\n\n\treturn (\n\t\t<span className={['fa-layers fa-fw', FavIconStyles].join(' ')}>\n\t\t\t<Icon iconType={innerHeart} size={'3x'} color={innerHeartColor} />\n\t\t\t<Icon iconType={hallowHeart} size={'3x'} color={hallowHeartColor} />\n\t\t</span>\n\t);\n};\n\nexport default FavIcon;\n","// Take an UNIX epoch date value and convert it to a day of the week string:\nexport const setDayOfTheWeek = (epochDate: number): string => {\n\tconst date = new Date(epochDate * 1000);\n\tconst dayOfWeek = [\n\t\t'Sunday',\n\t\t'Monday',\n\t\t'Tuesday',\n\t\t'Wednesday',\n\t\t'Thursday',\n\t\t'Friday',\n\t\t'Saturday',\n\t];\n\tlet day = dayOfWeek[date.getDay()];\n\treturn day;\n};\n\n// Take a YYYY-MM-DD format and convert it to DD/MM/YYYY format:\nexport const setCorrectDateFormat = (dateString: string): string => {\n\tconst splitDate: string = dateString.split('T')[0];\n\tconst parsedDate: string = splitDate\n\t\t.split('-')\n\t\t.reverse()\n\t\t.join('/');\n\n\treturn parsedDate;\n};\n","import {\n\tfaSun,\n\tfaCloudSun,\n\tfaCloud,\n\tfaCloudRain,\n\tfaCloudShowersHeavy,\n\tfaCloudSunRain,\n\tfaWind,\n\tfaSmog,\n\tfaCloudMoon,\n\tfaCloudMoonRain,\n\tfaMoon,\n\tfaSnowflake,\n\tIconDefinition,\n} from '@fortawesome/free-solid-svg-icons';\n\nconst setWeatherIcon = (isDay: boolean, iconNumber: number) => {\n\tlet icon: IconDefinition;\n\n\tswitch (iconNumber) {\n\t\tcase 1:\n\t\tcase 2:\n\t\tcase 3:\n\t\tcase 33:\n\t\tcase 34:\n\t\t\ticon = isDay ? faSun : faMoon;\n\t\t\tbreak;\n\n\t\tcase 5:\n\t\tcase 21:\n\t\tcase 36:\n\t\t\ticon = isDay ? faCloudSun : faCloudMoon;\n\t\t\tbreak;\n\n\t\tcase 6:\n\t\tcase 20:\n\t\tcase 7:\n\t\tcase 8:\n\t\tcase 35:\n\t\tcase 38:\n\t\t\ticon = isDay ? faCloud : faCloudMoon;\n\t\t\tbreak;\n\n\t\tcase 11:\n\t\t\ticon = faSmog;\n\t\t\tbreak;\n\n\t\tcase 18:\n\t\tcase 19:\n\t\tcase 25:\n\t\tcase 26:\n\t\tcase 29:\n\t\tcase 39:\n\t\tcase 40:\n\t\t\ticon = isDay ? faCloudRain : faCloudMoonRain;\n\t\t\tbreak;\n\n\t\tcase 14:\n\t\tcase 17:\n\t\tcase 16:\n\t\t\ticon = faCloudSunRain;\n\t\t\tbreak;\n\n\t\tcase 15:\n\t\t\ticon = faCloudShowersHeavy;\n\t\t\tbreak;\n\n\t\tcase 32:\n\t\t\ticon = faWind;\n\t\t\tbreak;\n\n\t\tcase 22:\n\t\tcase 24:\n\t\tcase 23:\n\t\t\ticon = faSnowflake;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\ticon = isDay ? faCloudSun : faCloudMoon;\n\t\t\tbreak;\n\t}\n\treturn icon;\n};\n\nexport default setWeatherIcon;\n","import React, { useState, useEffect, memo } from 'react';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport SelectedWeatherInfo from './SelectedWeatherInfo/SelectedWeatherInfo';\nimport FavIcon from '../../../display/UI/Icon/FavIcon/FavIcon';\nimport {\n\taddToFavoritesAction,\n\tremoveFromFavoritesAction,\n\tinitFavoritesAction,\n} from '../../Favorites/store/actions';\nimport {\n\tsetCorrectDateFormat,\n\tsetDayOfTheWeek,\n} from '../../../../utilities/convert-functions/dates';\nimport setWeatherIcon from './setWeatherIcon';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport styles from './SelectedWeather.module.css';\nimport { IProps } from './propsInterface';\n\n\nexport const SelectedWeather: React.FC<IProps> = ({\n\tsetNewFavoriteItem,\n\tremoveFromFavorites,\n\tfavoritesList,\n\tweatherData,\n\tisLoading,\n\tinitFavorites,\n}) => {\n\tconst { SelectedWeatherStyles, buttonWrapper } = styles;\n\n\tconst [isFavorite, setIsFavorite] = useState(false);\n\tconst [weatherIconType, setWeatherIconType] = useState();\n\n\t// Destructured weatherData:\n\tconst {\n\t\tLocalObservationDateTime: localDate,\n\t\tEpochTime,\n\t\tWeatherText,\n\t\tWeatherIcon,\n\t\tIsDayTime,\n\t\tLink,\n\t\tTemperature,\n\t\tcityName,\n\t\tcountryName,\n\t\tkey,\n\t} = weatherData;\n\n\t// Set correct date formats:\n\n\tconst day = !isLoading && EpochTime ? setDayOfTheWeek(EpochTime) : '';\n\tconst date = !isLoading && localDate ? setCorrectDateFormat(localDate) : '';\n\n\tuseEffect(() => {\n\t\tinitFavorites();\n\t}, [initFavorites]);\n\n\tuseEffect(() => {\n\t\tconst checkForFavoriteListing = (): any => {\n\t\t\tlet isListed;\n\t\t\tif (favoritesList)\n\t\t\t\tisListed = favoritesList.some((el: any) => el.key === key);\n\n\t\t\treturn isListed;\n\t\t};\n\t\tsetIsFavorite(() => checkForFavoriteListing());\n\t}, [favoritesList, key, isFavorite]);\n\n\t// Set the current weather Icon according to data:\n\tuseEffect(() => {\n\t\tlet weatherIcon: IconDefinition;\n\t\tif (!isLoading && WeatherIcon)\n\t\t\tweatherIcon = setWeatherIcon(IsDayTime, WeatherIcon);\n\t\tsetWeatherIconType(() => weatherIcon);\n\t}, [IsDayTime, WeatherIcon, isLoading]);\n\n\tconst handleFavoriteButtonClick = (key: string) => {\n\t\tif (!isFavorite) {\n\t\t\tsetNewFavoriteItem(key, cityName, countryName);\n\t\t\tsetIsFavorite(() => true);\n\t\t} else {\n\t\t\tremoveFromFavorites(key);\n\t\t\tsetIsFavorite(() => false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={SelectedWeatherStyles}>\n\t\t\t{!isLoading && weatherData.key && (\n\t\t\t\t<>\n\t\t\t\t\t<SelectedWeatherInfo\n\t\t\t\t\t\tweatherIconType={weatherIconType}\n\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\tinfoLink={Link}\n\t\t\t\t\t\tcityName={cityName}\n\t\t\t\t\t\tcountryName={countryName}\n\t\t\t\t\t\ttemperature={Temperature}\n\t\t\t\t\t\tdate={date}\n\t\t\t\t\t\tday={day}\n\t\t\t\t\t/>\n\t\t\t\t\t\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>{WeatherText}</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t{Temperature && `${Temperature.Metric.Value}`}\n\t\t\t\t\t\t\t\t<span>&#176;</span>\n\t\t\t\t\t\t\t\t{`${Temperature.Metric.Unit}`}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\n\t\t\t\t\t<div className={buttonWrapper}>\n\t\t\t\t\t\t<button onClick={() => handleFavoriteButtonClick(key)}>\n\t\t\t\t\t\t\t<FavIcon isFavorite={isFavorite} />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = (state: any) => {\n\treturn {\n\t\tweatherData: state.currentWeather.selectedResult,\n\t\tisLoading: state.currentWeather.isLoading,\n\t\tsearchResults: state.search.results,\n\t\tfavoritesList: state.favorites.favoritesList,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, any>) => {\n\treturn {\n\t\tsetNewFavoriteItem: (\n\t\t\tkey: string,\n\t\t\tcityName: string,\n\t\t\tcountryName: string\n\t\t) => dispatch(addToFavoritesAction(key, cityName, countryName)),\n\n\t\tremoveFromFavorites: (key: string) =>\n\t\t\tdispatch(removeFromFavoritesAction(key)),\n\t\tinitFavorites: () => dispatch(initFavoritesAction()),\n\t};\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(memo(SelectedWeather));\n","const fahrenheitToCelsius = (fahrenheitValue: number): number => {\n\treturn Math.round(((fahrenheitValue - 32) * 5) / 9);\n};\n\nexport default fahrenheitToCelsius;\n","import React, { memo } from 'react';\nimport { connect } from 'react-redux';\nimport Card from '../../../display/UI/Card/Card';\nimport {\n\tsetCorrectDateFormat,\n\tsetDayOfTheWeek,\n} from '../../../../utilities/convert-functions/dates';\nimport fahrenheitToCelsius from '../../../../utilities/convert-functions/fahrenheitToCelsius';\nimport styles from './FiveDaysForecast.module.css';\n\ninterface IProps {\n\tforecastResults: {\n\t\tEpochDate: number;\n\t\tDate: string;\n\t\tTemperature: {\n\t\t\tMinimum: { Value: number; Unit: string };\n\t\t\tMaximum: { Value: number; Unit: string };\n\t\t};\n\t\tDay: { IconPhrase: string };\n\t\tLink: string;\n\t}[];\n}\n\nexport const FiveDaysForecast: React.FC<IProps> = ({ forecastResults }) => {\n\tconst { FiveDaysForecastStyles } = styles;\n\n\treturn (\n\t\t<div className={FiveDaysForecastStyles}>\n\t\t\t{forecastResults.map(\n\t\t\t\t({ EpochDate, Date, Temperature, Day, Link }, i) => {\n\t\t\t\t\t// Convert EpochDate into a day of the week string:\n\t\t\t\t\tlet day = setDayOfTheWeek(EpochDate);\n\t\t\t\t\tday =\n\t\t\t\t\t\ti === 0\n\t\t\t\t\t\t\t? `${day} (Today)`\n\t\t\t\t\t\t\t: i === 1\n\t\t\t\t\t\t\t? `${day} (Tomorrow)`\n\t\t\t\t\t\t\t: day;\n\n\t\t\t\t\tconst { Value: maxVal } = Temperature.Minimum;\n\t\t\t\t\tconst maxCelsiusVal: number = fahrenheitToCelsius(maxVal);\n\t\t\t\t\tconst maxTemp: number = maxCelsiusVal;\n\n\t\t\t\t\tconst { Value: minVal } = Temperature.Maximum;\n\t\t\t\t\tconst minCelsiusVal: number = fahrenheitToCelsius(minVal);\n\t\t\t\t\tconst minTemp: number = minCelsiusVal;\n\n\t\t\t\t\t// Get the weather text:\n\t\t\t\t\tconst { IconPhrase } = Day;\n\n\t\t\t\t\t// Get the DD-MM-YYYY date format:\n\t\t\t\t\tconst date = setCorrectDateFormat(Date);\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\tkey={EpochDate}\n\t\t\t\t\t\t\t\tmainHeading={day}\n\t\t\t\t\t\t\t\tdate={date}\n\t\t\t\t\t\t\t\tmaxValue={maxTemp}\n\t\t\t\t\t\t\t\tminValue={minTemp}\n\t\t\t\t\t\t\t\tdescription={IconPhrase}\n\t\t\t\t\t\t\t\tlink={Link}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\n// Redux setup:\nconst mapStateToProps = (state: any) => {\n\treturn {\n\t\tforecastResults: state.fiveDaysForecast.resultList,\n\t};\n};\n\nexport default connect(mapStateToProps)(memo(FiveDaysForecast));\n","import React from 'react';\nimport styles from './Loader.module.css';\n\nconst Loader: React.FC = () => {\n\tconst { Loader } = styles;\n\treturn <div className={Loader}></div>;\n};\n\nexport default Loader;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport SelectedWeather from './SelectedWeather/SelectedWeather';\nimport FiveDaysForecast from './FiveDaysForecast/FiveDaysForecast';\nimport ErrorMessage from '../../display/UI/ErrorMessage/ErrorMessage';\nimport Loader from '../../display/UI/Loader/Loader';\nimport styles from './WeatherDisplayContainer.module.css';\n\ninterface IProps {\n\tisCurrentWeatherLoading: boolean;\n\tweatherError?: string;\n\tisFiveDaysForecastLoading: boolean;\n\tfiveDaysForecastError?: string;\n}\n\nexport const WeatherDisplayContainer: React.FC<IProps> = ({\n\tisCurrentWeatherLoading,\n\tweatherError,\n\tisFiveDaysForecastLoading,\n\tfiveDaysForecastError,\n}) => {\n\tconst { WeatherDisplayContainerStyles } = styles;\n\n\tconst errorDetails = weatherError ? weatherError : fiveDaysForecastError;\n\n\treturn (\n\t\t<section className={WeatherDisplayContainerStyles}>\n\t\t\t{!isCurrentWeatherLoading && !isFiveDaysForecastLoading ? (\n\t\t\t\t<>\n\t\t\t\t\t{!weatherError && !fiveDaysForecastError ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<SelectedWeather />\n\t\t\t\t\t\t\t<FiveDaysForecast />\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<ErrorMessage errorDetails={errorDetails} />\n\t\t\t\t\t)}\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<Loader />\n\t\t\t)}\n\t\t</section>\n\t);\n};\n\n// Redux setup:\nconst mapStateToProps = (state: any) => {\n\treturn {\n\t\tisCurrentWeatherLoading: state.currentWeather.isLoading,\n\t\tweatherError: state.currentWeather.error,\n\t\tisFiveDaysForecastLoading: state.fiveDaysForecast.isLoading,\n\t\tFiveDaysForecastError: state.fiveDaysForecast.error,\n\t};\n};\n\nexport default connect(mapStateToProps)(WeatherDisplayContainer);\n","import React from 'react';\nimport SearchComponent from '../SearchContainer/SearchContainer';\nimport WeatherDisplayContainer from '../WeatherDisplayContainer/WeatherDIsplayContainer';\n\nconst WeatherContent: React.FC = () => {\n\treturn (\n\t\t<>\n\t\t\t<SearchComponent />\n\t\t\t<WeatherDisplayContainer />\n\t\t</>\n\t);\n};\n\nexport default WeatherContent;\n","import React from 'react';\nimport styles from './Footer.module.css';\n\nconst Footer: React.FC = () => {\n\tconst { FooterStyles } = styles;\n\n\treturn (\n\t\t<div className={FooterStyles}>\n\t\t\t<p>\n\t\t\t\tMade for{' '}\n\t\t\t\t<a\n\t\t\t\t\thref=\"https://herolo.co.il/\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t>\n\t\t\t\t\tHerolo\n\t\t\t\t</a>{' '}\n\t\t\t\tusing{' '}\n\t\t\t\t<a\n\t\t\t\t\thref=\"https://reactjs.org/\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t>\n\t\t\t\t\tReact\n\t\t\t\t</a>{' '}\n\t\t\t\twith ❤️ by{' '}\n\t\t\t\t<a\n\t\t\t\t\thref=\"https://github.com/EliTu\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t>\n\t\t\t\t\tEliad Tuksher\n\t\t\t\t</a>{' '}\n\t\t\t\t2019\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nexport default Footer;\n","import React, { Suspense } from 'react';\nimport Loader from '../../components/display/UI/Loader/Loader';\n\n// A utility HOC for loading components lazily with React Router, implementing Suspense with a fallback for each component that is rendered through the Router\nconst LazyLoader = (Component: any) => {\n\treturn (props: any) => (\n\t\t<Suspense fallback={<Loader />}>\n\t\t\t<Component {...props} />\n\t\t</Suspense>\n\t);\n};\n\nexport default LazyLoader;\n","import React, { lazy, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Layout from './components/containers/Layout/Layout';\nimport Navbar from './components/display/Navbar/Navbar';\nimport WeatherContent from './components/containers/WeatherContent/WeatherContent';\nimport Footer from './components/display/Footer/Footer';\nimport './App.css';\nimport LazyLoader from './utilities/hoc/LazyLoader';\nimport { fireCurrentWeatherHttpRequest } from './components/containers/WeatherDisplayContainer/store/actions';\nimport { fireFiveDaysForecastHttpRequest } from './components/containers/WeatherDisplayContainer/store/actions';\nimport { initFavoritesAction } from './components/containers/Favorites/store/actions';\n\n// Lazy loading imports:\nconst Favorites = lazy(() =>\n\timport('./components/containers/Favorites/Favorites')\n);\nconst About = lazy(() => import('./components/display/About/About'));\n\ninterface IProps {\n\tinitFavoritesList: () => void;\n\tsetDefaultWeatherData: (\n\t\tval: string,\n\t\tcityName: string,\n\t\tcountryName: string,\n\t\tdispatchIdentifier: string\n\t) => void;\n\tsetDefaultFiveDaysForecast: (key: string) => void;\n}\n\nexport const App: React.FC<IProps> = ({\n\tinitFavoritesList,\n\tsetDefaultWeatherData,\n\tsetDefaultFiveDaysForecast,\n}) => {\n\t// On component mount, get the localStorage favorite list:\n\tuseEffect(() => {\n\t\tinitFavoritesList();\n\t}, [initFavoritesList]);\n\n\t// On component mount, by default, set and display Tel-Aviv's weather info\n\tuseEffect(() => {\n\t\tsetDefaultWeatherData('215854', 'Tel-Aviv', 'Israel', 'currentWeather');\n\t\tsetDefaultFiveDaysForecast('215854');\n\t}, [setDefaultFiveDaysForecast, setDefaultWeatherData]);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Router>\n\t\t\t\t<Layout>\n\t\t\t\t\t<Navbar />\n\t\t\t\t\t<div className=\"content-wrapper\">\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath=\"/favorites\"\n\t\t\t\t\t\t\t\tcomponent={LazyLoader(Favorites)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath=\"/about\"\n\t\t\t\t\t\t\t\tcomponent={LazyLoader(About)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route path=\"/\" component={WeatherContent} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Footer />\n\t\t\t\t</Layout>\n\t\t\t</Router>\n\t\t</div>\n\t);\n};\n\n// Redux setup:\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tinitFavoritesList: () => dispatch(initFavoritesAction()),\n\t\tsetDefaultWeatherData: (\n\t\t\tkey: string,\n\t\t\tcityName: string,\n\t\t\tcountryName: string\n\t\t) =>\n\t\t\tdispatch(\n\t\t\t\tfireCurrentWeatherHttpRequest(\n\t\t\t\t\tkey,\n\t\t\t\t\t'currentWeather',\n\t\t\t\t\tcityName,\n\t\t\t\t\tcountryName\n\t\t\t\t)\n\t\t\t),\n\t\tsetDefaultFiveDaysForecast: (key: string) =>\n\t\t\tdispatch(fireFiveDaysForecastHttpRequest(key)),\n\t};\n};\n\nexport default connect(\n\tnull,\n\tmapDispatchToProps\n)(App);\n","import {\n\tSearchInitState,\n\tSEARCH_REQUEST_INIT,\n\tSEARCH_REQUEST_SUCCESS,\n\tSEARCH_REQUEST_FAIL,\n\tCLOSE_SEARCH_RESULTS,\n\tSearchResultActionTypes,\n} from './types';\n\nconst INITIAL_STATE: SearchInitState = {\n\tresults: [],\n\tisLoading: false,\n\terror: '',\n\tareResultsDisplayed: false,\n};\n\nconst searchReducer = (\n\tstate = INITIAL_STATE,\n\taction: SearchResultActionTypes\n): SearchInitState => {\n\tswitch (action.type) {\n\t\tcase SEARCH_REQUEST_INIT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: true,\n\t\t\t\terror: '',\n\t\t\t\tareResultsDisplayed: false,\n\t\t\t};\n\n\t\tcase SEARCH_REQUEST_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tresults: [...action.results],\n\t\t\t\tisLoading: action.results.length < 0,\n\t\t\t\tareResultsDisplayed: action.results.length > 0,\n\t\t\t\terror: '',\n\t\t\t};\n\t\tcase SEARCH_REQUEST_FAIL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tresults: [],\n\t\t\t\terror: action.error,\n\t\t\t\tareResultsDisplayed: false,\n\t\t\t\tisLoading: false,\n\t\t\t};\n\n\t\tcase CLOSE_SEARCH_RESULTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tareResultsDisplayed: false,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default searchReducer;\n","import {\n\tCurrentWeatherInitState,\n\tCURRENT_WEATHER_INIT,\n\tCURRENT_WEATHER_SUCCESS,\n\tCURRENT_WEATHER_FAIL,\n\tCurrentWeatherActionTypes,\n} from './types';\n\nconst INITIAL_STATE: CurrentWeatherInitState = {\n\tselectedResult: [],\n\terror: '',\n\tisLoading: false,\n};\n\nconst currentWeatherReducer = (\n\tstate = INITIAL_STATE,\n\taction: CurrentWeatherActionTypes\n): CurrentWeatherInitState => {\n\tswitch (action.type) {\n\t\tcase CURRENT_WEATHER_INIT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: true,\n\t\t\t\terror: '',\n\t\t\t\tselectedResult: [],\n\t\t\t};\n\t\tcase CURRENT_WEATHER_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: false,\n\t\t\t\terror: '',\n\t\t\t\tselectedResult: action.weatherResults,\n\t\t\t};\n\t\tcase CURRENT_WEATHER_FAIL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: false,\n\t\t\t\terror: action.error,\n\t\t\t\tselectedResult: [],\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default currentWeatherReducer;\n","import {\n\tFiveDaysForecastInitState,\n\tFIVE_DAYS_FORECAST_INIT,\n\tFIVE_DAYS_FORECAST_SUCCESS,\n\tFIVE_DAYS_FORECAST_FAIL,\n\tFiveDaysForecastActionTypes,\n} from './types';\n\nconst INITIAL_STATE: FiveDaysForecastInitState = {\n\tresultList: [],\n\terror: '',\n\tisLoading: false,\n};\n\nconst fiveDaysForecastReducer = (\n\tstate = INITIAL_STATE,\n\taction: FiveDaysForecastActionTypes\n): FiveDaysForecastInitState => {\n\tswitch (action.type) {\n\t\tcase FIVE_DAYS_FORECAST_INIT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: true,\n\t\t\t\terror: '',\n\t\t\t\tresultList: [],\n\t\t\t};\n\t\tcase FIVE_DAYS_FORECAST_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: false,\n\t\t\t\terror: '',\n\t\t\t\tresultList: [...action.fiveDaysForecastResults],\n\t\t\t};\n\t\tcase FIVE_DAYS_FORECAST_FAIL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: false,\n\t\t\t\terror: action.error,\n\t\t\t\tresultList: [],\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default fiveDaysForecastReducer;\n","import {\n\tfavortiesInitState,\n\tINIT_FAVORITES,\n\tADD_TO_FAVORITES,\n\tREMOVE_FROM_FAVORITES,\n\tFAVORITE_WEATHER_DATA_INIT,\n\tGET_FAVORITES_WEATHER_DATA,\n\tfavoritesActionTypes,\n} from './types';\n\nconst INIT_STATE: favortiesInitState = {\n\tisLoading: false,\n\tfavoritesList: [],\n\tweatherData: [],\n};\n\nconst favoritesReducer = (\n\tstate = INIT_STATE,\n\taction: favoritesActionTypes\n): favortiesInitState => {\n\tswitch (action.type) {\n\t\tcase INIT_FAVORITES:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: false,\n\t\t\t\tfavoritesList: action.localStorageList,\n\t\t\t\tweatherData: [],\n\t\t\t};\n\n\t\tcase ADD_TO_FAVORITES:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: false,\n\t\t\t\tfavoritesList: action.updatedAditions,\n\t\t\t\tweatherData: state.weatherData,\n\t\t\t};\n\n\t\tcase REMOVE_FROM_FAVORITES:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: false,\n\t\t\t\tfavoritesList: action.updatedRemovals,\n\t\t\t\tweatherData: state.weatherData,\n\t\t\t};\n\n\t\tcase FAVORITE_WEATHER_DATA_INIT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: true,\n\t\t\t\tfavoritesList: [],\n\t\t\t\tweatherData: [],\n\t\t\t};\n\n\t\tcase GET_FAVORITES_WEATHER_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: false,\n\t\t\t\tfavoritesList: state.favoritesList,\n\t\t\t\tweatherData: [\n\t\t\t\t\t...state.weatherData,\n\t\t\t\t\taction.favoritesWeatherData,\n\t\t\t\t],\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t};\n\t}\n};\n\nexport default favoritesReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {\n\tcreateStore,\n\tcompose,\n\tcombineReducers,\n\tapplyMiddleware,\n\tStore,\n\tReducer,\n} from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport searchReducer from './components/containers/SearchContainer/store/searchReducer';\nimport './index.css';\nimport currentWeatherReducer from './components/containers/WeatherDisplayContainer/store/currentWeatherReducer';\nimport fiveDaysForecastReducer from './components/containers/WeatherDisplayContainer/store/fiveDaysForecastReducer';\nimport favoritesReducer from './components/containers/Favorites/store/favoritesReducer';\n\n// Enabling the Redux Dev tools for development mode:\nconst composeEnhancers =\n\t(window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer: Reducer = combineReducers({\n\tsearch: searchReducer,\n\tcurrentWeather: currentWeatherReducer,\n\tfiveDaysForecast: fiveDaysForecastReducer,\n\tfavorites: favoritesReducer,\n});\n\nconst store: Store = createStore(\n\trootReducer,\n\tcomposeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}